package com.jsdisco.soundscompose.data

import com.jsdisco.soundscompose.data.models.Chord
import com.jsdisco.soundscompose.data.models.Interval
import com.jsdisco.soundscompose.data.models.Note

class ChordsRepository {

    val intervals = listOf(
        Interval(1, "kleine Sekunde"),
        Interval(2, "große Sekunde"),
        Interval(3, "kleine Terz"),
        Interval(4, "große Terz"),
        Interval(5, "Quarte"),
        Interval(6, "Tritonus"),
        Interval(7, "Quinte"),
        Interval(8, "kleine Sexte"),
        Interval(9, "große Sexte"),
        Interval(10, "kleine Septime"),
        Interval(11, "große Septime"),
        Interval(12, "Oktave")
    )

    val roots = listOf(
        "C",
        "C#/Db",
        "D",
        "D#/Eb",
        "E",
        "F",
        "F#/Gb",
        "G",
        "G#/Ab",
        "A",
        "A#/Bb",
        "B"
    )

    val chordNames = listOf(
        "major",
        "m",
        "dim",
        "dim7",
        "sus2",
        "sus4",
        "7sus4",
        "aug",
        "aug7",
        "aug9",
        "5",
        "6",
        "69",
        "7",
        "7b5",
        "7b9",
        "7sharp9",
        "7b5b9",
        "7sharp5b9",
        "7b5sharp9",
        "7sharp5sharp9",
        "9",
        "9b5",
        "9sharp11",
        "11",
        "13",
        "add9",
        "maj7",
        "maj7b5",
        "maj7sharp5",
        "maj9",
        "maj11",
        "maj13",
        "m6",
        "m69",
        "m7",
        "m7b5",
        "m9",
        "m11",
        "mmaj7",
        "mmaj7b5",
        "mmaj9",
        "mmaj11",
        "madd9"
    )

    val notes = listOf(
        Note(48, 2, "c", "C"),
        Note(49, 2, "db", "C#/Db"),
        Note(50, 2, "d", "D"),
        Note(51, 2, "eb", "D#/Eb"),
        Note(52, 2, "e", "E"),
        Note(53, 2, "f", "F"),
        Note(54, 2, "gb", "F#/Gb"),
        Note(55, 2, "g", "G"),
        Note(56, 2, "ab", "G#/Ab"),
        Note(57, 2, "a", "A"),
        Note(58, 2, "bb", "A#/Bb"),
        Note(59, 2, "b", "B"),
        Note(60, 3, "c", "C"),
        Note(61, 3, "db", "C#/Db"),
        Note(62, 3, "d", "D"),
        Note(63, 3, "eb", "D#/Eb"),
        Note(64, 3, "e", "E"),
        Note(65, 3, "f", "F"),
        Note(66, 3, "gb", "F#/Gb"),
        Note(67, 3, "g", "G"),
        Note(68, 3, "ab", "G#/Ab"),
        Note(69, 3, "a", "A"),
        Note(70, 3, "bb", "A#/Bb"),
        Note(71, 3, "b", "B"),
        Note(72, 4, "c", "C")
    )

    val notesWhite = listOf(
        Note(48, 2, "c", "C"),
        Note(50, 2, "d", "D"),
        Note(52, 2, "e", "E"),
        Note(53, 2, "f", "F"),
        Note(55, 2, "g", "G"),
        Note(57, 2, "a", "A"),
        Note(59, 2, "b", "B"),
        Note(60, 3, "c", "C"),
        Note(62, 3, "d", "D"),
        Note(64, 3, "e", "E"),
        Note(65, 3, "f", "F"),
        Note(67, 3, "g", "G"),
        Note(69, 3, "a", "A"),
        Note(71, 3, "b", "B"),
        Note(72, 4, "c", "C")
    )

    val notesBlack = listOf(
        Note(49, 2, "db", "C#/Db"),
        Note(51, 2, "eb", "D#/Eb"),
        Note(54, 2, "gb", "F#/Gb"),
        Note(56, 2, "ab", "G#/Ab"),
        Note(58, 2, "bb", "A#/Bb"),
        Note(61, 3, "db", "C#/Db"),
        Note(63, 3, "eb", "D#/Eb"),
        Note(66, 3, "gb", "F#/Gb"),
        Note(68, 3, "ab", "G#/Ab"),
        Note(70, 3, "bb", "A#/Bb"),
    )

    val chordsInGame = listOf(
        Chord("major", listOf(0, 4, 7)),
        Chord("m", listOf(0, 3, 7)),
        Chord("7", listOf(0, 4, 7, 10)),
        Chord("9", listOf(0, 4, 7, 10, 14)),
        Chord("maj7", listOf(0, 4, 7, 11)),
        Chord("mmaj7", listOf(0, 3, 7, 11)),
        Chord("dim", listOf(0, 3, 6)),
        Chord("dim7", listOf(0, 3, 6, 9)),
        Chord("sus2", listOf(0, 2, 7)),
        Chord("sus4", listOf(0, 5, 7)),
        Chord("7sus4", listOf(0, 5, 7, 10)),
        Chord("aug", listOf(0, 4, 8)),
    )

    val chords = listOf(
        Chord("5", listOf(0, 7)),
        Chord("6", listOf(0, 4, 7, 9)),
        Chord("7", listOf(0, 4, 7, 10)),
        Chord("9", listOf(0, 4, 7, 10, 14)),
        Chord("11", listOf(0, 4, 7, 10, 14, 17)),
        Chord("13", listOf(0, 4, 7, 10, 14, 17, 21)),
        Chord("69", listOf(0, 4, 7, 9, 14)),
        Chord("major", listOf(0, 4, 7)),
        Chord("m", listOf(0, 3, 7)),
        Chord("dim", listOf(0, 3, 6)),
        Chord("dim7", listOf(0, 3, 6, 9)),
        Chord("sus2", listOf(0, 2, 7)),
        Chord("sus4", listOf(0, 5, 7)),
        Chord("7sus4", listOf(0, 5, 7, 10)),
        Chord("aug", listOf(0, 4, 8)),
        Chord("7b5", listOf(0, 4, 6, 10)),
        Chord("aug7", listOf(0, 4, 8, 10)),
        Chord("9b5", listOf(0, 4, 6, 10, 14)),
        Chord("aug9", listOf(0, 4, 8, 10, 14)),
        Chord("7b9", listOf(0, 4, 7, 10, 13)),
        Chord("7sharp9", listOf(0, 4, 7, 10, 15)),
        Chord("7b5b9", listOf(0, 4, 6, 10, 13)),
        Chord("7sharp5b9", listOf(0, 4, 8, 10, 13)),
        Chord("7b5sharp9", listOf(0, 4, 6, 10, 15)),
        Chord("7sharp5sharp9", listOf(0, 4, 8, 10, 15)),
        Chord("9sharp11", listOf(0, 4, 7, 10, 14, 18)),
        Chord("maj7", listOf(0, 4, 7, 11)),
        Chord("maj7b5", listOf(0, 4, 6, 11)),
        Chord("maj7sharp5", listOf(0, 4, 8, 11)),
        Chord("maj9", listOf(0, 4, 7, 11, 14)),
        Chord("maj11", listOf(0, 7, 11, 14, 17)),
        Chord("maj13", listOf(0, 4, 7, 11, 14, 21)),
        Chord("m6", listOf(0, 3, 7, 9)),
        Chord("m69", listOf(0, 3, 7, 9, 14)),
        Chord("m7", listOf(0, 3, 7, 10)),
        Chord("m7b5", listOf(0, 3, 6, 10)),
        Chord("m9", listOf(0, 3, 7, 10, 14)),
        Chord("m11", listOf(0, 3, 7, 10, 14, 17)),
        Chord("mmaj7", listOf(0, 3, 7, 11)),
        Chord("mmaj7b5", listOf(0, 3, 6, 11)),
        Chord("mmaj9", listOf(0, 3, 7, 11, 14)),
        Chord("mmaj11", listOf(0, 3, 7, 11, 14, 17)),
        Chord("add9", listOf(0, 4, 7, 14)),
        Chord("madd9", listOf(0, 3, 7, 14))
    )
}